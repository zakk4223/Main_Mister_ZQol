From 6cf5f0b353b7859eecfc3a6fce88331d24f003c4 Mon Sep 17 00:00:00 2001
From: Zakk <zakk@rsdio.com>
Date: Fri, 10 Jan 2025 04:34:06 -0500
Subject: [PATCH 9/9] 0009

---
 cfg.cpp       |   7 +++
 cfg.h         |   2 +
 file_io.cpp   |   2 +-
 input.cpp     |   1 +
 menu.cpp      | 138 ++++++++++++++++++++++++++++++++++++++++++--------
 menu.h        |   1 +
 scheduler.cpp |   1 +
 user_io.cpp   |  29 +++++++++++
 user_io.h     |   2 +
 9 files changed, 160 insertions(+), 23 deletions(-)

diff --git a/cfg.cpp b/cfg.cpp
index 7908d91..f37c23c 100644
--- a/cfg.cpp
+++ b/cfg.cpp
@@ -136,6 +136,7 @@ static const ini_var_t ini_vars[] =
 	{ "SS_CURRENT_SLOT", (void *)(&(cfg.ss_current_slot)), STRING, 0, sizeof(cfg.ss_current_slot) - 1},
 	{ "SOCD_UD", (void*)(&(cfg.socd_ud)), STRING, 0, sizeof(cfg.socd_ud) - 1 },
 	{ "SOCD_LR", (void*)(&(cfg.socd_lr)), STRING, 0, sizeof(cfg.socd_lr) - 1 },
+	{ "EXTERNAL_SAVE_STATE_UI", (void *)(&(cfg.external_save_state_ui)), STRING, 0, sizeof(cfg.external_save_state_ui) - 1},
 	{ "MAIN", (void*)(&(cfg.main)), STRING, 0, sizeof(cfg.main) - 1 },
 };
 
@@ -628,6 +629,12 @@ void cfg_parse()
     if (!strcasecmp(cfg.socd_lr, "right")) cfg.socd_lr_int = SOCD_LR_RIGHT;
   }
 
+	cfg.use_external_save_state_ui = 0;
+	if (strlen(cfg.external_save_state_ui))
+	{
+		cfg.use_external_save_state_ui = 1;
+	}
+
 }
 
 bool cfg_has_video_sections()
diff --git a/cfg.h b/cfg.h
index 05fa8ab..d18923a 100644
--- a/cfg.h
+++ b/cfg.h
@@ -115,6 +115,8 @@ typedef struct {
 	char socd_lr[16];
 	uint8_t socd_ud_int;
 	uint8_t socd_lr_int;
+	char external_save_state_ui[256];
+	uint8_t use_external_save_state_ui;
 	char main[1024];
 } cfg_t;
 
diff --git a/file_io.cpp b/file_io.cpp
index e7f7297..4b0ff32 100644
--- a/file_io.cpp
+++ b/file_io.cpp
@@ -838,7 +838,7 @@ void FileGenerateScreenshotName(const char *name, char *out_name, int buflen)
 	// If the name ends with .png then don't modify it
 	if( !strcasecmp(name + strlen(name) - 4, ".png") )
 	{
-		const char *p = strrchr(name, '/');
+		const char *p = strchr(name, '/');
 		make_fullpath(SCREENSHOT_DIR);
 		if( p )
 		{
diff --git a/input.cpp b/input.cpp
index 2e1d82e..b4a18e2 100644
--- a/input.cpp
+++ b/input.cpp
@@ -1825,6 +1825,7 @@ static void uinp_send_key(uint16_t key, int press)
 
 static void uinp_check_key()
 {
+	return;
 	if (uinp_fd > 0)
 	{
 		if (!grabbed)
diff --git a/menu.cpp b/menu.cpp
index 2b7a999..ebc70f3 100644
--- a/menu.cpp
+++ b/menu.cpp
@@ -44,6 +44,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #include <bluetooth.h>
 #include <hci.h>
 #include <hci_lib.h>
+#include <unistd.h>
 
 #include "file_io.h"
 #include "osd.h"
@@ -218,6 +219,7 @@ enum MENU
 
 };
 
+static bool menu_using_fb = false;
 static uint32_t menustate = MENU_NONE1;
 static uint32_t parentstate;
 static uint32_t menusub = 0;
@@ -232,6 +234,9 @@ static bool osd_unlocked = 1;
 static char osd_code_entry[32];
 static uint32_t osd_lock_timer = 0;
 
+static pid_t ttypid = 0;
+static int ttypipe[2];
+static bool menu_did_write;
 
 extern const char *version;
 
@@ -787,6 +792,27 @@ static void MenuWrite(unsigned char n, const char *s = "", unsigned char invert
 {
 	int row = n - firstmenu;
 
+
+
+	if (ttypipe[1])
+	{
+		FILE *fbf = fdopen(ttypipe[1], "w");
+
+		char fb_str[1024] = {0};
+		
+		if (!menu_did_write)
+		{
+			strcpy(fb_str, "<MENUSTART>\n");
+			fputs(fb_str, fbf);
+			fflush(fbf);
+		}
+
+		sprintfz(fb_str, "<MENULINE>%s<%d>%s\n", invert ? "<SELECTED>" : "", n, s);
+		fputs(fb_str, fbf);
+		fflush(fbf);
+	}
+
+	menu_did_write = true;
 	if (row < 0)
 	{
 		if (invert) adjvisible = row;
@@ -821,9 +847,10 @@ const char* get_rbf_name_bootcore(char *str)
 	return p + 1;
 }
 
-static void vga_nag()
+static void vga_nag(bool hdmi_fb = false)
 {
-	if (video_fb_state())
+
+	if (video_fb_state() && !hdmi_fb)
 	{
 		EnableOsd_on(OSD_VGA);
 		OsdSetSize(16);
@@ -848,7 +875,7 @@ static void vga_nag()
 	}
 
 	OsdDisable();
-	EnableOsd_on(OSD_ALL);
+	EnableOsd_on(hdmi_fb ? OSD_VGA : OSD_ALL);
 }
 
 void process_addon(char *ext, uint8_t idx)
@@ -1027,8 +1054,58 @@ static void menu_parse_buttons()
   }
 }
 
+void closeFBMenu()
+{
+	if (ttypid)
+	{
+		if (ttypipe[1]) close(ttypipe[1]);
+		kill(ttypid, SIGKILL); //Nuke
+													 
+		ttypipe[0] = 0;
+		ttypipe[1] = 0;
+		video_fb_enable(0);
+		if (waitpid(ttypid, 0, 0) > 0)
+		{
+		}
+		ttypid = 0;
+	}
+
+	menu_using_fb = false;
+}
+
+
+void openFBMenu(char *torun)
+{
+
+	if (!ttypid)
+	{
+		 
+		char fdstr[15] = {0};
+ 		video_chvt(2);
+		video_fb_enable(1);
+		pipe(ttypipe);
+		ttypid = fork();
+		if (!ttypid)
+		{
+			close(ttypipe[1]);
+			//execl("/sbin/agetty", "/sbin/agetty", "-a", "root", "-l", "/media/fat/Scripts/screenshots.sh", "--nohostname", "-L", "tty2", "linux", NULL);
+			sprintfz(fdstr, "%d", ttypipe[0]);
+			execl(torun, torun, fdstr, NULL);
+			exit(0); //should never be reached
+		} else {
+			close(ttypipe[0]);
+			fcntl(ttypipe[1], F_SETFL, O_NONBLOCK);
+			vga_nag(true);
+			OsdEnable(DISABLE_KEYBOARD);
+			menu_using_fb = true;
+		}
+	}
+}
+
+
 void HandleUI(void)
 {
+	menu_did_write = false;
 	PROFILE_FUNCTION();
 
 	if (bt_timer >= 0)
@@ -1074,7 +1151,6 @@ void HandleUI(void)
 	static uint32_t cheatsub = 0;
 	static uint8_t card_cid[32];
 	static uint32_t hdmask = 0;
-	static pid_t ttypid = 0;
 	static int has_fb_terminal = 0;
 	static unsigned long flash_timer = 0;
 	static int flash_state = 0;
@@ -1226,8 +1302,9 @@ void HandleUI(void)
 		}
 	}
 
+	
 	//prevent OSD control while script is executing on framebuffer
-	if ((!video_fb_state() || video_chvt(0) != 2) && !select_ini)
+	if ((!video_fb_state() || video_chvt(0) != 2 || menu_using_fb) && !select_ini)
 	{
 		switch (c)
 		{
@@ -1516,6 +1593,7 @@ void HandleUI(void)
 		menustate = MENU_NONE2;
 		firstmenu = 0;
 		vga_nag();
+		closeFBMenu();
 		OsdSetSize(8);
 		break;
 
@@ -1571,8 +1649,11 @@ void HandleUI(void)
 				}
 			}
 			OsdClear();
-			if (!mgl->done) OsdDisable();
-			else OsdEnable(DISABLE_KEYBOARD);
+			if (!mgl->done) {
+				OsdDisable();
+			} else {
+				OsdEnable(DISABLE_KEYBOARD);
+			}
 			if (mgl->state == 1) mgl->state = 2;
 		}
 		break;
@@ -7870,6 +7951,9 @@ void HandleUI(void)
 
   case MENU_SAVE_STATE1:
    {
+		 			if (cfg.use_external_save_state_ui)
+							openFBMenu(cfg.external_save_state_ui);
+
 					menustate = MENU_SAVE_STATE2;
 					parentstate = MENU_SAVE_STATE1;
 					OsdSetTitle("Save States", 0);
@@ -7893,10 +7977,20 @@ void HandleUI(void)
           MenuWrite(n, " Save", menusub == n, 0); n++;
 					MenuWrite(n, " Load", menusub == n, 0); n++;
 					for (int i = n; i < OsdGetSize() - 1; i++) MenuWrite(i, "", 0, 0);
+					if (cfg.use_external_save_state_ui && ttypid)
+					{
+						if (menu_using_fb && ttypipe[1])
+						{
+							FILE *fbf = fdopen(ttypipe[1], "w");
+							fprintf(fbf, "<MENUIMAGE>%s\n", ss_screenshot_path());
+							fflush(fbf);
+						}
+					}
    }
    break;
   case MENU_SAVE_STATE2:
    {
+
      if (select || minus || plus || left || right)
      {
        menustate = MENU_SAVE_STATE1;
@@ -7928,9 +8022,10 @@ void HandleUI(void)
         case 3:
            if (select)
            {
-             ss_menu_load();
              menustate = MENU_NONE1;
-           }
+             ss_menu_load();
+           } else {
+					 }
            break;
        }
      }
@@ -8235,6 +8330,18 @@ void PrintDirectory(int expand)
 	}
 }
 
+void FlipFBGui()
+{
+	if (menu_did_write && menu_using_fb && ttypipe[1]) {
+		FILE *fbf = fdopen(ttypipe[1], "w");
+		char fb_str[16] = {0};
+		strcpy(fb_str, "<MENUDONE>\n");
+		fputs(fb_str, fbf);
+		fflush(fbf);
+	}
+}
+
+
 static void set_text(const char *message, unsigned char code)
 {
 	char s[40];
@@ -8398,16 +8505,3 @@ void ProgressMessage(const char* title, const char* text, int current, int max,
 	}
 }
 
-
-/*
-void menu_open_savestate_osd()
-{
-  if (!user_io_osd_is_visible())
-  {
-    menu_open_savestate = true;
-  } else if (menustate == MENU_SAVE_STATE1 || menustate == MENU_SAVE_STATE2) {
-    menu_open_savestate = false;
-    menustate = MENU_NONE1;
-  }
-}
-*/
diff --git a/menu.h b/menu.h
index beb62cd..4b2c394 100644
--- a/menu.h
+++ b/menu.h
@@ -16,6 +16,7 @@ void InfoMessage(const char *message, int timeout = 2000, const char *title = "M
 void Info(const char *message, int timeout = 2000, int width = 0, int height = 0, int frame = 0);
 void MenuHide();
 void SelectINI();
+void FlipFBGui();
 
 void open_joystick_setup();
 int menu_lightgun_cb(int idx, uint16_t type, uint16_t code, int value);
diff --git a/scheduler.cpp b/scheduler.cpp
index 919d31a..7b3323f 100644
--- a/scheduler.cpp
+++ b/scheduler.cpp
@@ -44,6 +44,7 @@ static void scheduler_co_ui(void)
 		{
 			SPIKE_SCOPE("co_ui", 1000);
 			HandleUI();
+			FlipFBGui();
 			OsdUpdate();
 		}
 
diff --git a/user_io.cpp b/user_io.cpp
index d733179..725aa52 100644
--- a/user_io.cpp
+++ b/user_io.cpp
@@ -9,11 +9,14 @@
 #include <ctype.h>
 #include <sys/stat.h>
 #include <sys/statvfs.h>
+#include <sys/wait.h>
+
 
 #include "lib/imlib2/Imlib2.h"
 
 #include "hardware.h"
 #include "osd.h"
+#include "str_util.h"
 #include "user_io.h"
 #include "debug.h"
 #include "spi.h"
@@ -4303,8 +4306,34 @@ void ss_menu_save()
   if (!cfg.ss_save_bit[0]) return;
 
   ss_save_pending = true;
+	char screenshot_name[1024] = {0};
+	char use_rom_name[1024] = {0};
+	strcpy(use_rom_name, ss_rom_name);
+	char *p = strrchr(use_rom_name, '.');
+	if (p) p[0] = 0;
+	p = strrchr(use_rom_name, '/');
+	if (!p) p = use_rom_name;
+	sprintfz(screenshot_name, "/%s/%s_ss_%d.png", CoreName, p, ss_save_slot);
+	user_io_screenshot(screenshot_name, 0);
   user_io_status_set(cfg.ss_save_bit, 1);
   user_io_status_set(cfg.ss_save_bit, 0);
+
 }
 
 
+char *ss_screenshot_path()
+{
+
+	static char ss_filename[1024] = {0};
+	char screenshot_name[1024] = {0};
+	char use_rom_name[1024] = {0};
+	strcpy(use_rom_name, ss_rom_name);
+	char *p = strrchr(use_rom_name, '.');
+	if (p) p[0] = 0;
+	p = strrchr(use_rom_name, '/');
+	if (!p) p = use_rom_name;
+	sprintfz(screenshot_name, "/%s/%s_ss_%d.png", CoreName, p, ss_save_slot);
+	FileGenerateScreenshotName(screenshot_name, ss_filename, 1024);
+	return (char *)getFullPath(ss_filename);
+}
+
diff --git a/user_io.h b/user_io.h
index 038a37d..4998ab4 100644
--- a/user_io.h
+++ b/user_io.h
@@ -288,8 +288,10 @@ char is_uneon();
 
 
 void ss_menu_load();
+void ss_menu_set_pid(pid_t pid);
 void ss_menu_save();
 void ss_menu_set_slot(uint8_t slot);
+char *ss_screenshot_path();
 uint8_t ss_menu_get_slot();
 int ss_menu_get_descr(char *descr, int descr_sz);
 bool core_has_save_states();
-- 
2.47.1

