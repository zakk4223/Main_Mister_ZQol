From f445ef6432cd8c7aa2e1f7287816317ff5813e88 Mon Sep 17 00:00:00 2001
From: Zakk <zakk@rsdio.com>
Date: Tue, 3 Dec 2024 17:08:49 -0500
Subject: [PATCH 8/9] 0008

---
 cfg.cpp   | 19 +++++++++++++++++++
 cfg.h     | 13 +++++++++++++
 input.cpp | 37 +++++++++++++++++++++++++++++++++++++
 3 files changed, 69 insertions(+)

diff --git a/cfg.cpp b/cfg.cpp
index 23eed09..63f7109 100644
--- a/cfg.cpp
+++ b/cfg.cpp
@@ -134,6 +134,8 @@ static const ini_var_t ini_vars[] =
 	{ "SS_LOAD_BIT", (void *)(&(cfg.ss_load_bit)), STRING, 0, sizeof(cfg.ss_load_bit) - 1},
 	{ "SS_SAVE_BIT", (void *)(&(cfg.ss_save_bit)), STRING, 0, sizeof(cfg.ss_save_bit) - 1},
 	{ "SS_CURRENT_SLOT", (void *)(&(cfg.ss_current_slot)), STRING, 0, sizeof(cfg.ss_current_slot) - 1},
+	{ "SOCD_UD", (void*)(&(cfg.socd_ud)), STRING, 0, sizeof(cfg.socd_ud) - 1 },
+	{ "SOCD_LR", (void*)(&(cfg.socd_lr)), STRING, 0, sizeof(cfg.socd_lr) - 1 },
 	{ "MAIN", (void*)(&(cfg.main)), STRING, 0, sizeof(cfg.main) - 1 },
 };
 
@@ -612,6 +614,23 @@ void cfg_parse()
 		if (!strcasecmp(cfg.vga_mode, "svideo")) cfg.vga_mode_int = 2;
 		if (!strcasecmp(cfg.vga_mode, "cvbs")) cfg.vga_mode_int = 3;
 	}
+
+  if (strlen(cfg.socd_ud))
+  {
+    if (!strcasecmp(cfg.socd_ud, "neutral")) cfg.socd_ud_int = SOCD_UD_NEUTRAL;
+    if (!strcasecmp(cfg.socd_ud, "last")) cfg.socd_ud_int = SOCD_UD_LAST;
+    if (!strcasecmp(cfg.socd_ud, "up")) cfg.socd_ud_int = SOCD_UD_UP;
+    if (!strcasecmp(cfg.socd_ud, "down")) cfg.socd_ud_int = SOCD_UD_DOWN;
+  }
+
+  if (strlen(cfg.socd_lr))
+  {
+    if (!strcasecmp(cfg.socd_lr, "neutral")) cfg.socd_lr_int = SOCD_LR_NEUTRAL;
+    if (!strcasecmp(cfg.socd_lr, "last")) cfg.socd_lr_int = SOCD_LR_LAST;
+    if (!strcasecmp(cfg.socd_lr, "left")) cfg.socd_lr_int = SOCD_LR_LEFT;
+    if (!strcasecmp(cfg.socd_lr, "right")) cfg.socd_lr_int = SOCD_LR_RIGHT;
+  }
+
 }
 
 bool cfg_has_video_sections()
diff --git a/cfg.h b/cfg.h
index d218c67..05fa8ab 100644
--- a/cfg.h
+++ b/cfg.h
@@ -7,6 +7,15 @@
 
 #include <inttypes.h>
 
+#define SOCD_UD_NEUTRAL 1
+#define SOCD_UD_LAST 2
+#define SOCD_UD_UP 3 
+#define SOCD_UD_DOWN 4 
+#define SOCD_LR_NEUTRAL 1 
+#define SOCD_LR_LAST 2 
+#define SOCD_LR_LEFT 3 
+#define SOCD_LR_RIGHT 4 
+
 //// type definitions ////
 typedef struct {
 	uint8_t  disable_nvram;
@@ -102,6 +111,10 @@ typedef struct {
 	char ss_load_bit[8];
 	char ss_save_bit[8];
 	char ss_current_slot[15];
+	char socd_ud[16];
+	char socd_lr[16];
+	uint8_t socd_ud_int;
+	uint8_t socd_lr_int;
 	char main[1024];
 } cfg_t;
 
diff --git a/input.cpp b/input.cpp
index 6633dc8..d138a34 100644
--- a/input.cpp
+++ b/input.cpp
@@ -6176,8 +6176,10 @@ int input_poll(int getchar)
 	{
 		for (int i = 0; i < NUMPLAYERS; i++)
 		{
+      uint8_t new_dir_mask = 0;
 			if (af_delay[i] < AF_MIN) af_delay[i] = AF_MIN;
 
+
 			if (!time[i]) time[i] = GetTimer(af_delay[i]);
 
 			if (((joy[i] ^ joy_prev[i]) & autofire[i]) || ((joy_adv[i] ^ joy_adv_prev[i]) & advancedautofire[i]))
@@ -6197,6 +6199,41 @@ int input_poll(int getchar)
 			uint32_t adv_send = af[i] ? joy_adv[i] & ~advancedautofire[i] : joy_adv[i];
 			uint32_t send_comb = (uint32_t)joy_send | (uint32_t)(joy_send >> 32) | adv_send;
 			int newdir = (send_comb & 0xF) != (send_prev[i] & 0x0F);
+      new_dir_mask = (send_comb & 0xF) ^ (send_prev[i] & 0x0F);
+      if ((send_comb & 0x3) == 0x3)
+      {
+        switch(cfg.socd_lr_int) //l+r socd
+        {
+          case SOCD_LR_NEUTRAL:
+            send_comb &= ~0x3;
+            break;
+          case SOCD_LR_LAST:
+            send_comb &= ~(~new_dir_mask & 0x3);
+            break;
+          case SOCD_LR_LEFT:
+            send_comb &= ~0x1;
+            break;
+          case SOCD_LR_RIGHT:
+            send_comb &= ~0x2;
+        }
+      }
+      if ((send_comb & 0xC) == 0xC) //u+d socd
+      {
+        switch(cfg.socd_ud_int)
+        {
+          case SOCD_UD_NEUTRAL:
+            send_comb &= ~0xC;
+            break;
+          case SOCD_UD_LAST:
+            send_comb &= ~(~new_dir_mask & 0xC);
+            break;
+          case SOCD_UD_UP:
+            send_comb &= ~0x4;
+            break;
+          case SOCD_UD_DOWN:
+            send_comb &= ~0x8;
+        }
+      }
 			if (send_comb != send_prev[i]) 
 			{
 				user_io_digital_joystick(i, send_comb, newdir);
-- 
2.47.1

